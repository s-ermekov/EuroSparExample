//
//  DescriptionBlock.swift
//  EuroSparExample
//
//  Created by macOS on 31.01.2024.
//

import SwiftUI

struct DescriptionBlock: View {
    let width = UIScreen.main.bounds.width
    
    var body: some View {
        VStack(alignment: .leading, spacing: 12) {
            Text("–î–æ–±–∞–≤–∫–∞ \"–õ–∏–ø–∞\" –∫ —á–∞—é 200 –≥")
                .multilineTextAlignment(.leading)
                .font(.system(size: 34, weight: .bold, design: .rounded))
                .frame(maxWidth: width * 0.75)
            
            HStack(spacing: 16) {
                Text("üá™üá∏")
                    .font(.system(size: 32))
                    .frame(width: 24, height: 24)
                    .clipShape(Circle())
                
                Text("–ò—Å–ø–∞–Ω–∏—è, –†–∏–æ—Ö–∞")
                    .font(.system(size: 14))
            }
            .padding(.vertical, 8)
            
            Text("–û–ø–∏—Å–∞–Ω–∏–µ")
                .font(.headline)
            
            Text("–§–ª–∞–≤–æ–Ω–æ–∏–¥—ã –ª–∏–ø–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ –æ–±–ª–∞–¥–∞—é—Ç –ø—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é —Å—Ç–µ–Ω–∫–∏ —Å–æ—Å—É–¥–æ–≤.")
                .multilineTextAlignment(.leading)
                .font(.system(size: 14))
                .padding(.bottom, 8)
            
            Text("–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
                .font(.headline)
            
            HStack(alignment: .top, spacing: 0) {
                Text("–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")
                    .lineLimit(1)
                    .frame(minWidth: 100, alignment: .leading)
                
                DashLine()
                
                Text("–†–æ—Å—Å–∏—è, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π")
                    .multilineTextAlignment(.trailing)
                    .lineLimit(2)
                    .frame(minWidth: 180, alignment: .trailing)
            }
            
            HStack(alignment: .top) {
                Text("–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å, –∫–∫–∞–ª/100 –≥")
                    .lineLimit(2)
                    .frame(minWidth: 140, maxWidth: 140, alignment: .leading)
                
                DashLine()

                Text("25 –∫–∫–∞–ª, 10 –∫–î–∂")
                    .multilineTextAlignment(.trailing)
                    .lineLimit(2)
            }
            
            HStack(alignment: .top) {
                Text("–ñ–∏—Ä—ã/100 –≥")
                    .lineLimit(2)
                
                DashLine()
                
                Text("0,1 –≥")
                    .multilineTextAlignment(.trailing)
                    .lineLimit(2)
            }
            
            HStack(alignment: .top) {
                Text("–ë–µ–ª–∫–∏/100 –≥")
                    .lineLimit(2)
                
                DashLine()
                
                Text("1,3 –≥")
                    .multilineTextAlignment(.trailing)
                    .lineLimit(2)
            }
            
            HStack(alignment: .top) {
                Text("–£–≥–ª–µ–≤–æ–¥—ã/100 –≥")
                    .lineLimit(2)
                
                DashLine()
                
                Text("3,3 –≥")
                    .multilineTextAlignment(.trailing)
                    .lineLimit(2)
            }
            
            Text("–í—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
                .font(.headline)
                .foregroundColor(.green)
                .padding(.vertical, 8)
        }
        .padding(.horizontal, 20)
        .font(.system(size: 14))
    }
}

struct DashLine: View {
    var body: some View {
        GeometryReader { geometry in
            Path { path in
                path.move(to: CGPoint(x: 0, y: 14))
                
                path.addLine(to: CGPoint(x: geometry.size.width, y: 14))
            }
            .stroke(style: StrokeStyle(lineWidth: 1, dash: [3]))
            .foregroundColor(.primary)
        }
    }
}

#Preview {
    ContentView()
}
